[{"C:\\Users\\bb\\reducer-hook\\src\\index.js":"1","C:\\Users\\bb\\reducer-hook\\src\\App.js":"2","C:\\Users\\bb\\reducer-hook\\src\\reportWebVitals.js":"3","C:\\Users\\bb\\reducer-hook\\src\\components\\CounterOne.js":"4","C:\\Users\\bb\\reducer-hook\\src\\components\\CounterTwo.js":"5","C:\\Users\\bb\\reducer-hook\\src\\components\\CounterThree.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":378,"mtime":1606766497686,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":823,"mtime":1606759239040,"results":"11","hashOfConfig":"8"},{"size":1780,"mtime":1606761040711,"results":"12","hashOfConfig":"8"},{"size":1203,"mtime":1606767229361,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14uv7w9",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bb\\reducer-hook\\src\\index.js",[],"C:\\Users\\bb\\reducer-hook\\src\\App.js",["28","29","30"],"C:\\Users\\bb\\reducer-hook\\src\\reportWebVitals.js",[],"C:\\Users\\bb\\reducer-hook\\src\\components\\CounterOne.js",["31","32","33","34"],"import React , {useReducer} from 'react'\r\n\r\nconst initialState = 0\r\nconst reducer = (state, action) => {\r\n    switch (action) {\r\n        case 'increment': return state + 1\r\n        break;\r\n        case 'decrement': return state - 1\r\n        break;\r\n        case 'reset': return initialState\r\n        break;\r\n    \r\n        default: return state\r\n            break;\r\n    }\r\n} \r\n\r\nfunction CounterOne() {\r\n\r\n    const [count, dispatch] = useReducer(reducer, initialState)\r\n    return (\r\n        <div>\r\n            <div>Count - {count}</div>\r\n            <button onClick= {() => dispatch('increment')}>Increment</button>\r\n            <button onClick= {() => dispatch('decrement')}>Decrement</button>\r\n            <button onClick= {() => dispatch('reset')}>Reset</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterOne\r\n",["35","36"],"C:\\Users\\bb\\reducer-hook\\src\\components\\CounterTwo.js",["37","38","39","40","41","42"],"C:\\Users\\bb\\reducer-hook\\src\\components\\CounterThree.js",["43","44","45","46"],{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":18},{"ruleId":"47","severity":1,"message":"52","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":18},{"ruleId":"53","severity":1,"message":"54","line":7,"column":9,"nodeType":"55","messageId":"56","endLine":7,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":9,"column":9,"nodeType":"55","messageId":"56","endLine":9,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":11,"column":9,"nodeType":"55","messageId":"56","endLine":11,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":14,"column":13,"nodeType":"55","messageId":"56","endLine":14,"endColumn":19},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"53","severity":1,"message":"54","line":10,"column":9,"nodeType":"55","messageId":"56","endLine":10,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":12,"column":9,"nodeType":"55","messageId":"56","endLine":12,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":14,"column":9,"nodeType":"55","messageId":"56","endLine":14,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":16,"column":9,"nodeType":"55","messageId":"56","endLine":16,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":18,"column":9,"nodeType":"55","messageId":"56","endLine":18,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":21,"column":13,"nodeType":"55","messageId":"56","endLine":21,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":7,"column":9,"nodeType":"55","messageId":"56","endLine":7,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":9,"column":9,"nodeType":"55","messageId":"56","endLine":9,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":11,"column":9,"nodeType":"55","messageId":"56","endLine":11,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":14,"column":13,"nodeType":"55","messageId":"56","endLine":14,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CounterOne' is defined but never used.","'CounterTwo' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-global-assign","no-unsafe-negation"]